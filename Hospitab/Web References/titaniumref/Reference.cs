//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Hospitab.titaniumref {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebServiceDBSoap", Namespace="http://tempuri.org/")]
    public partial class WebServiceDB : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback RegisterOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback PatientOperationCompleted;
        
        private System.Threading.SendOrPostCallback PtDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback OpthalOperationCompleted;
        
        private System.Threading.SendOrPostCallback CentreOperationCompleted;
        
        private System.Threading.SendOrPostCallback DoctorOperationCompleted;
        
        private System.Threading.SendOrPostCallback PtListOperationCompleted;
        
        private System.Threading.SendOrPostCallback EyeDtOperationCompleted;
        
        private System.Threading.SendOrPostCallback OldPtListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ALoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocVerifyOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocDtOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocApprovalListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocApproveOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocDiscardOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocPtListOperationCompleted;
        
        private System.Threading.SendOrPostCallback DocStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebServiceDB() {
            this.Url = "http://208.78.220.62:90/WebServiceDB.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event RegisterCompletedEventHandler RegisterCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event PatientCompletedEventHandler PatientCompleted;
        
        /// <remarks/>
        public event PtDetailsCompletedEventHandler PtDetailsCompleted;
        
        /// <remarks/>
        public event OpthalCompletedEventHandler OpthalCompleted;
        
        /// <remarks/>
        public event CentreCompletedEventHandler CentreCompleted;
        
        /// <remarks/>
        public event DoctorCompletedEventHandler DoctorCompleted;
        
        /// <remarks/>
        public event PtListCompletedEventHandler PtListCompleted;
        
        /// <remarks/>
        public event EyeDtCompletedEventHandler EyeDtCompleted;
        
        /// <remarks/>
        public event OldPtListCompletedEventHandler OldPtListCompleted;
        
        /// <remarks/>
        public event ALoginCompletedEventHandler ALoginCompleted;
        
        /// <remarks/>
        public event DocVerifyCompletedEventHandler DocVerifyCompleted;
        
        /// <remarks/>
        public event DocDtCompletedEventHandler DocDtCompleted;
        
        /// <remarks/>
        public event DocApprovalListCompletedEventHandler DocApprovalListCompleted;
        
        /// <remarks/>
        public event DocApproveCompletedEventHandler DocApproveCompleted;
        
        /// <remarks/>
        public event DocDiscardCompletedEventHandler DocDiscardCompleted;
        
        /// <remarks/>
        public event DocPtListCompletedEventHandler DocPtListCompleted;
        
        /// <remarks/>
        public event DocStatusCompletedEventHandler DocStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Register", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReturnData Register(int title, string fname, string lname, int Age, int ageflag, int gender, string phone, string address, string img) {
            object[] results = this.Invoke("Register", new object[] {
                        title,
                        fname,
                        lname,
                        Age,
                        ageflag,
                        gender,
                        phone,
                        address,
                        img});
            return ((ReturnData)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterAsync(int title, string fname, string lname, int Age, int ageflag, int gender, string phone, string address, string img) {
            this.RegisterAsync(title, fname, lname, Age, ageflag, gender, phone, address, img, null);
        }
        
        /// <remarks/>
        public void RegisterAsync(int title, string fname, string lname, int Age, int ageflag, int gender, string phone, string address, string img, object userState) {
            if ((this.RegisterOperationCompleted == null)) {
                this.RegisterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterOperationCompleted);
            }
            this.InvokeAsync("Register", new object[] {
                        title,
                        fname,
                        lname,
                        Age,
                        ageflag,
                        gender,
                        phone,
                        address,
                        img}, this.RegisterOperationCompleted, userState);
        }
        
        private void OnRegisterOperationCompleted(object arg) {
            if ((this.RegisterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReturnData Login(string username, string password) {
            object[] results = this.Invoke("Login", new object[] {
                        username,
                        password});
            return ((ReturnData)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string password) {
            this.LoginAsync(username, password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string username, string password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        username,
                        password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PtList", RequestElementName="PtList", RequestNamespace="http://tempuri.org/", ResponseElementName="PtListResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("PtListResult")]
        public ReturnData Patient() {
            object[] results = this.Invoke("Patient", new object[0]);
            return ((ReturnData)(results[0]));
        }
        
        /// <remarks/>
        public void PatientAsync() {
            this.PatientAsync(null);
        }
        
        /// <remarks/>
        public void PatientAsync(object userState) {
            if ((this.PatientOperationCompleted == null)) {
                this.PatientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPatientOperationCompleted);
            }
            this.InvokeAsync("Patient", new object[0], this.PatientOperationCompleted, userState);
        }
        
        private void OnPatientOperationCompleted(object arg) {
            if ((this.PatientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PatientCompleted(this, new PatientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PtDt", RequestElementName="PtDt", RequestNamespace="http://tempuri.org/", ResponseElementName="PtDtResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("PtDtResult")]
        public ReturnData PtDetails(string regno) {
            object[] results = this.Invoke("PtDetails", new object[] {
                        regno});
            return ((ReturnData)(results[0]));
        }
        
        /// <remarks/>
        public void PtDetailsAsync(string regno) {
            this.PtDetailsAsync(regno, null);
        }
        
        /// <remarks/>
        public void PtDetailsAsync(string regno, object userState) {
            if ((this.PtDetailsOperationCompleted == null)) {
                this.PtDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPtDetailsOperationCompleted);
            }
            this.InvokeAsync("PtDetails", new object[] {
                        regno}, this.PtDetailsOperationCompleted, userState);
        }
        
        private void OnPtDetailsOperationCompleted(object arg) {
            if ((this.PtDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PtDetailsCompleted(this, new PtDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Opthal", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ReturnData Opthal(
                    int rdocid, 
                    int ryear, 
                    int rmonth, 
                    int rday, 
                    string rageflag, 
                    string regno, 
                    string rsph, 
                    string lsph, 
                    string rcyl, 
                    string lcyl, 
                    string rvis, 
                    string lvis, 
                    string raxis, 
                    string laxis, 
                    string nrsph, 
                    string nlsph, 
                    string nrcyl, 
                    string nlcyl, 
                    string nrvis, 
                    string nlvis, 
                    string nraxis, 
                    string nlaxis, 
                    string arsph, 
                    string alsph, 
                    string centre, 
                    string remarks, 
                    string img) {
            object[] results = this.Invoke("Opthal", new object[] {
                        rdocid,
                        ryear,
                        rmonth,
                        rday,
                        rageflag,
                        regno,
                        rsph,
                        lsph,
                        rcyl,
                        lcyl,
                        rvis,
                        lvis,
                        raxis,
                        laxis,
                        nrsph,
                        nlsph,
                        nrcyl,
                        nlcyl,
                        nrvis,
                        nlvis,
                        nraxis,
                        nlaxis,
                        arsph,
                        alsph,
                        centre,
                        remarks,
                        img});
            return ((ReturnData)(results[0]));
        }
        
        /// <remarks/>
        public void OpthalAsync(
                    int rdocid, 
                    int ryear, 
                    int rmonth, 
                    int rday, 
                    string rageflag, 
                    string regno, 
                    string rsph, 
                    string lsph, 
                    string rcyl, 
                    string lcyl, 
                    string rvis, 
                    string lvis, 
                    string raxis, 
                    string laxis, 
                    string nrsph, 
                    string nlsph, 
                    string nrcyl, 
                    string nlcyl, 
                    string nrvis, 
                    string nlvis, 
                    string nraxis, 
                    string nlaxis, 
                    string arsph, 
                    string alsph, 
                    string centre, 
                    string remarks, 
                    string img) {
            this.OpthalAsync(rdocid, ryear, rmonth, rday, rageflag, regno, rsph, lsph, rcyl, lcyl, rvis, lvis, raxis, laxis, nrsph, nlsph, nrcyl, nlcyl, nrvis, nlvis, nraxis, nlaxis, arsph, alsph, centre, remarks, img, null);
        }
        
        /// <remarks/>
        public void OpthalAsync(
                    int rdocid, 
                    int ryear, 
                    int rmonth, 
                    int rday, 
                    string rageflag, 
                    string regno, 
                    string rsph, 
                    string lsph, 
                    string rcyl, 
                    string lcyl, 
                    string rvis, 
                    string lvis, 
                    string raxis, 
                    string laxis, 
                    string nrsph, 
                    string nlsph, 
                    string nrcyl, 
                    string nlcyl, 
                    string nrvis, 
                    string nlvis, 
                    string nraxis, 
                    string nlaxis, 
                    string arsph, 
                    string alsph, 
                    string centre, 
                    string remarks, 
                    string img, 
                    object userState) {
            if ((this.OpthalOperationCompleted == null)) {
                this.OpthalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOpthalOperationCompleted);
            }
            this.InvokeAsync("Opthal", new object[] {
                        rdocid,
                        ryear,
                        rmonth,
                        rday,
                        rageflag,
                        regno,
                        rsph,
                        lsph,
                        rcyl,
                        lcyl,
                        rvis,
                        lvis,
                        raxis,
                        laxis,
                        nrsph,
                        nlsph,
                        nrcyl,
                        nlcyl,
                        nrvis,
                        nlvis,
                        nraxis,
                        nlaxis,
                        arsph,
                        alsph,
                        centre,
                        remarks,
                        img}, this.OpthalOperationCompleted, userState);
        }
        
        private void OnOpthalOperationCompleted(object arg) {
            if ((this.OpthalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OpthalCompleted(this, new OpthalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CenList", RequestElementName="CenList", RequestNamespace="http://tempuri.org/", ResponseElementName="CenListResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("CenListResult")]
        public ReturnData Centre(int rdocid) {
            object[] results = this.Invoke("Centre", new object[] {
                        rdocid});
            return ((ReturnData)(results[0]));
        }
        
        /// <remarks/>
        public void CentreAsync(int rdocid) {
            this.CentreAsync(rdocid, null);
        }
        
        /// <remarks/>
        public void CentreAsync(int rdocid, object userState) {
            if ((this.CentreOperationCompleted == null)) {
                this.CentreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCentreOperationCompleted);
            }
            this.InvokeAsync("Centre", new object[] {
                        rdocid}, this.CentreOperationCompleted, userState);
        }
        
        private void OnCentreOperationCompleted(object arg) {
            if ((this.CentreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CentreCompleted(this, new CentreCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DocList", RequestElementName="DocList", RequestNamespace="http://tempuri.org/", ResponseElementName="DocListResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DocListResult")]
        public ReturnData Doctor() {
            object[] results = this.Invoke("Doctor", new object[0]);
            return ((ReturnData)(results[0]));
        }
        
        /// <remarks/>
        public void DoctorAsync() {
            this.DoctorAsync(null);
        }
        
        /// <remarks/>
        public void DoctorAsync(object userState) {
            if ((this.DoctorOperationCompleted == null)) {
                this.DoctorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDoctorOperationCompleted);
            }
            this.InvokeAsync("Doctor", new object[0], this.DoctorOperationCompleted, userState);
        }
        
        private void OnDoctorOperationCompleted(object arg) {
            if ((this.DoctorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DoctorCompleted(this, new DoctorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PtDetails", RequestElementName="PtDetails", RequestNamespace="http://tempuri.org/", ResponseElementName="PtDetailsResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("PtDetailsResult")]
        public ReturnPt PtList(string fdate, string tdate, string docname) {
            object[] results = this.Invoke("PtList", new object[] {
                        fdate,
                        tdate,
                        docname});
            return ((ReturnPt)(results[0]));
        }
        
        /// <remarks/>
        public void PtListAsync(string fdate, string tdate, string docname) {
            this.PtListAsync(fdate, tdate, docname, null);
        }
        
        /// <remarks/>
        public void PtListAsync(string fdate, string tdate, string docname, object userState) {
            if ((this.PtListOperationCompleted == null)) {
                this.PtListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPtListOperationCompleted);
            }
            this.InvokeAsync("PtList", new object[] {
                        fdate,
                        tdate,
                        docname}, this.PtListOperationCompleted, userState);
        }
        
        private void OnPtListOperationCompleted(object arg) {
            if ((this.PtListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PtListCompleted(this, new PtListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/EyePtDetails", RequestElementName="EyePtDetails", RequestNamespace="http://tempuri.org/", ResponseElementName="EyePtDetailsResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("EyePtDetailsResult")]
        public ReturnData EyeDt(string emrno) {
            object[] results = this.Invoke("EyeDt", new object[] {
                        emrno});
            return ((ReturnData)(results[0]));
        }
        
        /// <remarks/>
        public void EyeDtAsync(string emrno) {
            this.EyeDtAsync(emrno, null);
        }
        
        /// <remarks/>
        public void EyeDtAsync(string emrno, object userState) {
            if ((this.EyeDtOperationCompleted == null)) {
                this.EyeDtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEyeDtOperationCompleted);
            }
            this.InvokeAsync("EyeDt", new object[] {
                        emrno}, this.EyeDtOperationCompleted, userState);
        }
        
        private void OnEyeDtOperationCompleted(object arg) {
            if ((this.EyeDtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.EyeDtCompleted(this, new EyeDtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/OldPtDetails", RequestElementName="OldPtDetails", RequestNamespace="http://tempuri.org/", ResponseElementName="OldPtDetailsResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("OldPtDetailsResult")]
        public ReturnPt OldPtList(int docid, string regno) {
            object[] results = this.Invoke("OldPtList", new object[] {
                        docid,
                        regno});
            return ((ReturnPt)(results[0]));
        }
        
        /// <remarks/>
        public void OldPtListAsync(int docid, string regno) {
            this.OldPtListAsync(docid, regno, null);
        }
        
        /// <remarks/>
        public void OldPtListAsync(int docid, string regno, object userState) {
            if ((this.OldPtListOperationCompleted == null)) {
                this.OldPtListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOldPtListOperationCompleted);
            }
            this.InvokeAsync("OldPtList", new object[] {
                        docid,
                        regno}, this.OldPtListOperationCompleted, userState);
        }
        
        private void OnOldPtListOperationCompleted(object arg) {
            if ((this.OldPtListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OldPtListCompleted(this, new OldPtListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AdminLogin", RequestElementName="AdminLogin", RequestNamespace="http://tempuri.org/", ResponseElementName="AdminLoginResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("AdminLoginResult")]
        public ReturnData ALogin(string username, string password) {
            object[] results = this.Invoke("ALogin", new object[] {
                        username,
                        password});
            return ((ReturnData)(results[0]));
        }
        
        /// <remarks/>
        public void ALoginAsync(string username, string password) {
            this.ALoginAsync(username, password, null);
        }
        
        /// <remarks/>
        public void ALoginAsync(string username, string password, object userState) {
            if ((this.ALoginOperationCompleted == null)) {
                this.ALoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnALoginOperationCompleted);
            }
            this.InvokeAsync("ALogin", new object[] {
                        username,
                        password}, this.ALoginOperationCompleted, userState);
        }
        
        private void OnALoginOperationCompleted(object arg) {
            if ((this.ALoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ALoginCompleted(this, new ALoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DoctorVerfiy", RequestElementName="DoctorVerfiy", RequestNamespace="http://tempuri.org/", ResponseElementName="DoctorVerfiyResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DoctorVerfiyResult")]
        public ReturnData DocVerify(string name, string degree, string regno, string phone, string email, int gender, string password, string centre, string imgdoc, string imgdegree, string imgproof, string username) {
            object[] results = this.Invoke("DocVerify", new object[] {
                        name,
                        degree,
                        regno,
                        phone,
                        email,
                        gender,
                        password,
                        centre,
                        imgdoc,
                        imgdegree,
                        imgproof,
                        username});
            return ((ReturnData)(results[0]));
        }
        
        /// <remarks/>
        public void DocVerifyAsync(string name, string degree, string regno, string phone, string email, int gender, string password, string centre, string imgdoc, string imgdegree, string imgproof, string username) {
            this.DocVerifyAsync(name, degree, regno, phone, email, gender, password, centre, imgdoc, imgdegree, imgproof, username, null);
        }
        
        /// <remarks/>
        public void DocVerifyAsync(string name, string degree, string regno, string phone, string email, int gender, string password, string centre, string imgdoc, string imgdegree, string imgproof, string username, object userState) {
            if ((this.DocVerifyOperationCompleted == null)) {
                this.DocVerifyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocVerifyOperationCompleted);
            }
            this.InvokeAsync("DocVerify", new object[] {
                        name,
                        degree,
                        regno,
                        phone,
                        email,
                        gender,
                        password,
                        centre,
                        imgdoc,
                        imgdegree,
                        imgproof,
                        username}, this.DocVerifyOperationCompleted, userState);
        }
        
        private void OnDocVerifyOperationCompleted(object arg) {
            if ((this.DocVerifyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocVerifyCompleted(this, new DocVerifyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DocDetails", RequestElementName="DocDetails", RequestNamespace="http://tempuri.org/", ResponseElementName="DocDetailsResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DocDetailsResult")]
        public ReturnData DocDt(string dregno) {
            object[] results = this.Invoke("DocDt", new object[] {
                        dregno});
            return ((ReturnData)(results[0]));
        }
        
        /// <remarks/>
        public void DocDtAsync(string dregno) {
            this.DocDtAsync(dregno, null);
        }
        
        /// <remarks/>
        public void DocDtAsync(string dregno, object userState) {
            if ((this.DocDtOperationCompleted == null)) {
                this.DocDtOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocDtOperationCompleted);
            }
            this.InvokeAsync("DocDt", new object[] {
                        dregno}, this.DocDtOperationCompleted, userState);
        }
        
        private void OnDocDtOperationCompleted(object arg) {
            if ((this.DocDtCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocDtCompleted(this, new DocDtCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/PendingDocDetails", RequestElementName="PendingDocDetails", RequestNamespace="http://tempuri.org/", ResponseElementName="PendingDocDetailsResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("PendingDocDetailsResult")]
        public ReturnPt DocApprovalList() {
            object[] results = this.Invoke("DocApprovalList", new object[0]);
            return ((ReturnPt)(results[0]));
        }
        
        /// <remarks/>
        public void DocApprovalListAsync() {
            this.DocApprovalListAsync(null);
        }
        
        /// <remarks/>
        public void DocApprovalListAsync(object userState) {
            if ((this.DocApprovalListOperationCompleted == null)) {
                this.DocApprovalListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocApprovalListOperationCompleted);
            }
            this.InvokeAsync("DocApprovalList", new object[0], this.DocApprovalListOperationCompleted, userState);
        }
        
        private void OnDocApprovalListOperationCompleted(object arg) {
            if ((this.DocApprovalListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocApprovalListCompleted(this, new DocApprovalListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DoctorApprove", RequestElementName="DoctorApprove", RequestNamespace="http://tempuri.org/", ResponseElementName="DoctorApproveResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DoctorApproveResult")]
        public ReturnData DocApprove(string docregno) {
            object[] results = this.Invoke("DocApprove", new object[] {
                        docregno});
            return ((ReturnData)(results[0]));
        }
        
        /// <remarks/>
        public void DocApproveAsync(string docregno) {
            this.DocApproveAsync(docregno, null);
        }
        
        /// <remarks/>
        public void DocApproveAsync(string docregno, object userState) {
            if ((this.DocApproveOperationCompleted == null)) {
                this.DocApproveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocApproveOperationCompleted);
            }
            this.InvokeAsync("DocApprove", new object[] {
                        docregno}, this.DocApproveOperationCompleted, userState);
        }
        
        private void OnDocApproveOperationCompleted(object arg) {
            if ((this.DocApproveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocApproveCompleted(this, new DocApproveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DoctorDiscard", RequestElementName="DoctorDiscard", RequestNamespace="http://tempuri.org/", ResponseElementName="DoctorDiscardResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DoctorDiscardResult")]
        public ReturnData DocDiscard(string docregno, string remarks) {
            object[] results = this.Invoke("DocDiscard", new object[] {
                        docregno,
                        remarks});
            return ((ReturnData)(results[0]));
        }
        
        /// <remarks/>
        public void DocDiscardAsync(string docregno, string remarks) {
            this.DocDiscardAsync(docregno, remarks, null);
        }
        
        /// <remarks/>
        public void DocDiscardAsync(string docregno, string remarks, object userState) {
            if ((this.DocDiscardOperationCompleted == null)) {
                this.DocDiscardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocDiscardOperationCompleted);
            }
            this.InvokeAsync("DocDiscard", new object[] {
                        docregno,
                        remarks}, this.DocDiscardOperationCompleted, userState);
        }
        
        private void OnDocDiscardOperationCompleted(object arg) {
            if ((this.DocDiscardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocDiscardCompleted(this, new DocDiscardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DocPtDetails", RequestElementName="DocPtDetails", RequestNamespace="http://tempuri.org/", ResponseElementName="DocPtDetailsResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DocPtDetailsResult")]
        public ReturnPt DocPtList(string fdate, string tdate, int docid) {
            object[] results = this.Invoke("DocPtList", new object[] {
                        fdate,
                        tdate,
                        docid});
            return ((ReturnPt)(results[0]));
        }
        
        /// <remarks/>
        public void DocPtListAsync(string fdate, string tdate, int docid) {
            this.DocPtListAsync(fdate, tdate, docid, null);
        }
        
        /// <remarks/>
        public void DocPtListAsync(string fdate, string tdate, int docid, object userState) {
            if ((this.DocPtListOperationCompleted == null)) {
                this.DocPtListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocPtListOperationCompleted);
            }
            this.InvokeAsync("DocPtList", new object[] {
                        fdate,
                        tdate,
                        docid}, this.DocPtListOperationCompleted, userState);
        }
        
        private void OnDocPtListOperationCompleted(object arg) {
            if ((this.DocPtListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocPtListCompleted(this, new DocPtListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DoctorStatus", RequestElementName="DoctorStatus", RequestNamespace="http://tempuri.org/", ResponseElementName="DoctorStatusResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("DoctorStatusResult")]
        public ReturnData DocStatus(string dregno, string dphone) {
            object[] results = this.Invoke("DocStatus", new object[] {
                        dregno,
                        dphone});
            return ((ReturnData)(results[0]));
        }
        
        /// <remarks/>
        public void DocStatusAsync(string dregno, string dphone) {
            this.DocStatusAsync(dregno, dphone, null);
        }
        
        /// <remarks/>
        public void DocStatusAsync(string dregno, string dphone, object userState) {
            if ((this.DocStatusOperationCompleted == null)) {
                this.DocStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDocStatusOperationCompleted);
            }
            this.InvokeAsync("DocStatus", new object[] {
                        dregno,
                        dphone}, this.DocStatusOperationCompleted, userState);
        }
        
        private void OnDocStatusOperationCompleted(object arg) {
            if ((this.DocStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DocStatusCompleted(this, new DocStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ReturnData {
        
        private string messageField;
        
        private string[] npatientsField;
        
        private string[] ncentreField;
        
        private string ecentreField;
        
        private string pfnameField;
        
        private string plnameField;
        
        private string paddressField;
        
        private string pphoneField;
        
        private string pageField;
        
        private string pregnoField;
        
        private int ageflagField;
        
        private int genderField;
        
        private int titleField;
        
        private int ndocidField;
        
        private int nyearField;
        
        private int nmonthField;
        
        private int ndayField;
        
        private string nflagField;
        
        private string[] ndoctorsField;
        
        private string trsphField;
        
        private string tlsphField;
        
        private string trcylField;
        
        private string tlcylField;
        
        private string tlaxisField;
        
        private string traxisField;
        
        private string trvisField;
        
        private string tlvisField;
        
        private string traddField;
        
        private string tladdField;
        
        private string ndocField;
        
        private string emrnoField;
        
        private string visitField;
        
        private string remarksField;
        
        private string nimageField;
        
        private string dnameField;
        
        private string ddegreeField;
        
        private string dregnoField;
        
        private string dphoneField;
        
        private string demailField;
        
        private string dgenderField;
        
        private string dcentreField;
        
        private string idocField;
        
        private string idegField;
        
        private string iproofField;
        
        private string pimgField;
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string[] npatients {
            get {
                return this.npatientsField;
            }
            set {
                this.npatientsField = value;
            }
        }
        
        /// <remarks/>
        public string[] ncentre {
            get {
                return this.ncentreField;
            }
            set {
                this.ncentreField = value;
            }
        }
        
        /// <remarks/>
        public string ecentre {
            get {
                return this.ecentreField;
            }
            set {
                this.ecentreField = value;
            }
        }
        
        /// <remarks/>
        public string pfname {
            get {
                return this.pfnameField;
            }
            set {
                this.pfnameField = value;
            }
        }
        
        /// <remarks/>
        public string plname {
            get {
                return this.plnameField;
            }
            set {
                this.plnameField = value;
            }
        }
        
        /// <remarks/>
        public string paddress {
            get {
                return this.paddressField;
            }
            set {
                this.paddressField = value;
            }
        }
        
        /// <remarks/>
        public string pphone {
            get {
                return this.pphoneField;
            }
            set {
                this.pphoneField = value;
            }
        }
        
        /// <remarks/>
        public string page {
            get {
                return this.pageField;
            }
            set {
                this.pageField = value;
            }
        }
        
        /// <remarks/>
        public string pregno {
            get {
                return this.pregnoField;
            }
            set {
                this.pregnoField = value;
            }
        }
        
        /// <remarks/>
        public int ageflag {
            get {
                return this.ageflagField;
            }
            set {
                this.ageflagField = value;
            }
        }
        
        /// <remarks/>
        public int gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        public int title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        public int ndocid {
            get {
                return this.ndocidField;
            }
            set {
                this.ndocidField = value;
            }
        }
        
        /// <remarks/>
        public int nyear {
            get {
                return this.nyearField;
            }
            set {
                this.nyearField = value;
            }
        }
        
        /// <remarks/>
        public int nmonth {
            get {
                return this.nmonthField;
            }
            set {
                this.nmonthField = value;
            }
        }
        
        /// <remarks/>
        public int nday {
            get {
                return this.ndayField;
            }
            set {
                this.ndayField = value;
            }
        }
        
        /// <remarks/>
        public string nflag {
            get {
                return this.nflagField;
            }
            set {
                this.nflagField = value;
            }
        }
        
        /// <remarks/>
        public string[] ndoctors {
            get {
                return this.ndoctorsField;
            }
            set {
                this.ndoctorsField = value;
            }
        }
        
        /// <remarks/>
        public string trsph {
            get {
                return this.trsphField;
            }
            set {
                this.trsphField = value;
            }
        }
        
        /// <remarks/>
        public string tlsph {
            get {
                return this.tlsphField;
            }
            set {
                this.tlsphField = value;
            }
        }
        
        /// <remarks/>
        public string trcyl {
            get {
                return this.trcylField;
            }
            set {
                this.trcylField = value;
            }
        }
        
        /// <remarks/>
        public string tlcyl {
            get {
                return this.tlcylField;
            }
            set {
                this.tlcylField = value;
            }
        }
        
        /// <remarks/>
        public string tlaxis {
            get {
                return this.tlaxisField;
            }
            set {
                this.tlaxisField = value;
            }
        }
        
        /// <remarks/>
        public string traxis {
            get {
                return this.traxisField;
            }
            set {
                this.traxisField = value;
            }
        }
        
        /// <remarks/>
        public string trvis {
            get {
                return this.trvisField;
            }
            set {
                this.trvisField = value;
            }
        }
        
        /// <remarks/>
        public string tlvis {
            get {
                return this.tlvisField;
            }
            set {
                this.tlvisField = value;
            }
        }
        
        /// <remarks/>
        public string tradd {
            get {
                return this.traddField;
            }
            set {
                this.traddField = value;
            }
        }
        
        /// <remarks/>
        public string tladd {
            get {
                return this.tladdField;
            }
            set {
                this.tladdField = value;
            }
        }
        
        /// <remarks/>
        public string ndoc {
            get {
                return this.ndocField;
            }
            set {
                this.ndocField = value;
            }
        }
        
        /// <remarks/>
        public string emrno {
            get {
                return this.emrnoField;
            }
            set {
                this.emrnoField = value;
            }
        }
        
        /// <remarks/>
        public string visit {
            get {
                return this.visitField;
            }
            set {
                this.visitField = value;
            }
        }
        
        /// <remarks/>
        public string remarks {
            get {
                return this.remarksField;
            }
            set {
                this.remarksField = value;
            }
        }
        
        /// <remarks/>
        public string nimage {
            get {
                return this.nimageField;
            }
            set {
                this.nimageField = value;
            }
        }
        
        /// <remarks/>
        public string dname {
            get {
                return this.dnameField;
            }
            set {
                this.dnameField = value;
            }
        }
        
        /// <remarks/>
        public string ddegree {
            get {
                return this.ddegreeField;
            }
            set {
                this.ddegreeField = value;
            }
        }
        
        /// <remarks/>
        public string dregno {
            get {
                return this.dregnoField;
            }
            set {
                this.dregnoField = value;
            }
        }
        
        /// <remarks/>
        public string dphone {
            get {
                return this.dphoneField;
            }
            set {
                this.dphoneField = value;
            }
        }
        
        /// <remarks/>
        public string demail {
            get {
                return this.demailField;
            }
            set {
                this.demailField = value;
            }
        }
        
        /// <remarks/>
        public string dgender {
            get {
                return this.dgenderField;
            }
            set {
                this.dgenderField = value;
            }
        }
        
        /// <remarks/>
        public string dcentre {
            get {
                return this.dcentreField;
            }
            set {
                this.dcentreField = value;
            }
        }
        
        /// <remarks/>
        public string idoc {
            get {
                return this.idocField;
            }
            set {
                this.idocField = value;
            }
        }
        
        /// <remarks/>
        public string ideg {
            get {
                return this.idegField;
            }
            set {
                this.idegField = value;
            }
        }
        
        /// <remarks/>
        public string iproof {
            get {
                return this.iproofField;
            }
            set {
                this.iproofField = value;
            }
        }
        
        /// <remarks/>
        public string pimg {
            get {
                return this.pimgField;
            }
            set {
                this.pimgField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3752.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ReturnPt {
        
        private string nameField;
        
        private string emrnoField;
        
        private string messageField;
        
        private string nlistField;
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string emrno {
            get {
                return this.emrnoField;
            }
            set {
                this.emrnoField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string nlist {
            get {
                return this.nlistField;
            }
            set {
                this.nlistField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void RegisterCompletedEventHandler(object sender, RegisterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PatientCompletedEventHandler(object sender, PatientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PatientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PatientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PtDetailsCompletedEventHandler(object sender, PtDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PtDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PtDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void OpthalCompletedEventHandler(object sender, OpthalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OpthalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OpthalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void CentreCompletedEventHandler(object sender, CentreCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CentreCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CentreCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DoctorCompletedEventHandler(object sender, DoctorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DoctorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DoctorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void PtListCompletedEventHandler(object sender, PtListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PtListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PtListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnPt Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnPt)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void EyeDtCompletedEventHandler(object sender, EyeDtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class EyeDtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal EyeDtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void OldPtListCompletedEventHandler(object sender, OldPtListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OldPtListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OldPtListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnPt Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnPt)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void ALoginCompletedEventHandler(object sender, ALoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ALoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ALoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DocVerifyCompletedEventHandler(object sender, DocVerifyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocVerifyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocVerifyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DocDtCompletedEventHandler(object sender, DocDtCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocDtCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocDtCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DocApprovalListCompletedEventHandler(object sender, DocApprovalListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocApprovalListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocApprovalListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnPt Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnPt)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DocApproveCompletedEventHandler(object sender, DocApproveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocApproveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocApproveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DocDiscardCompletedEventHandler(object sender, DocDiscardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocDiscardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocDiscardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnData)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DocPtListCompletedEventHandler(object sender, DocPtListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocPtListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocPtListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnPt Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnPt)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    public delegate void DocStatusCompletedEventHandler(object sender, DocStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3752.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DocStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DocStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ReturnData Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ReturnData)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591